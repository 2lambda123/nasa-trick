sim_object {
    sim_services/include: EXECUTIVE exec (sim_services/include/executive.d);

    (automatic) sim_services/input_processor:
        input_processor(INPUT_PROCESSOR* IP = &sys.exec.ip);
} sys;

sim_object {
	test4: TEST4 test4 (test4/include/test4.d);

        /******************************************/
        /** Scheduled Jobs                       **/
        /******************************************/
	(0.1, scheduled) test4:
		sched_job_1(TEST4* T = &dyn.test4);

	(0.1, scheduled) test4:
		sched_job_2(TEST4* T = &dyn.test4);

	(0.1, scheduled) test4:
		sched_job_3(TEST4* T = &dyn.test4);

	(0.1, scheduled) test4:
		sched_job_4(TEST4* T = &dyn.test4);

	(0.1, scheduled) test4:
		sched_job_5(TEST4* T = &dyn.test4);

        /* Duplicate sched_job_5() ****************/
	(0.1, scheduled) test4:
		sched_job_5(TEST4* T = &dyn.test4);


        /******************************************/
        /** Malfunction trigger jobs             **/
        /******************************************/
	(malfunction_trigger) test4:
		trigger_job_1(TEST4* T = &dyn.test4);

	(malfunction_trigger) test4:
		trigger_job_2(TEST4* T = &dyn.test4);

	(malfunction_trigger) test4:
		trigger_job_3(TEST4* T = &dyn.test4);

	(malfunction_trigger) test4:
		trigger_job_4(TEST4* T = &dyn.test4);


        /******************************************/
        /** Malfunction jobs                     **/
        /******************************************/
	(malfunction) test4:
		malf_job_1(TEST4* T = &dyn.test4);

	(malfunction) test4:
		malf_job_2(TEST4* T = &dyn.test4);

	(malfunction) test4:
		malf_job_3(TEST4* T = &dyn.test4);

	(malfunction) test4:
		malf_job_4(TEST4* T = &dyn.test4);
	
} dyn;
