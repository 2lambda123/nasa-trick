name: CivetServer
# This workflow is triggered on pushes to the repository.
on:
  push:
    paths-ignore:
    - 'docs/**'
    - '.github/workflows/**'
    - '!.github/workflows/test_civet.yml'
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  # all:
  #   matrix:
  #     cfg:
  #       - { os: ubuntu, tag: 20.04, arch: debian}
  #       - { os: centos, tag: latest, arch: rhel}
  #     include:
  #       - cfg: {}
  #       - cfg: { os: ubuntu }
  #         deps
  trickops-tests-ubuntu:
    name: Unit Tests Ubuntu:20.04
    runs-on: ubuntu-20.04
    container: ubuntu:20.04
    steps:
      - uses: actions/checkout@master
      - name: install dependencies
        run: |
          export DEBIAN_FRONTEND=noninteractive && apt-get update && apt-get install -y git python3 python3-venv perl perl-modules-5.30 qtbase5-dev wget unzip g++ make flex bison
      - name: create virtual environment
        run: |
          cd share/trick/pymods/trick/
          python3 -m venv .venv && source .venv/bin/activate && pip3 install -r requirements.txt
      - name: run Python tests
        run: |
          cd share/trick/pymods/trick/
          source .venv/bin/activate
          ./run_tests.py

  trickops-tests-centos8:
    name: Unit Tests CentOS:latest
    runs-on: ubuntu-20.04
    container: centos:latest
    steps:
      - uses: actions/checkout@master
      - name: install dependencies
        run: |
          dnf install -y git python3-devel which perl perl-Digest-MD5 qt5-qtbase-devel bison clang flex make gcc gcc-c++ wget
      - name: create virtual environment
        run: |
          cd share/trick/pymods/trick/
          python3 -m venv .venv && source .venv/bin/activate && pip3 install -r requirements.txt
      - name: run Python tests
        run: |
          cd share/trick/pymods/trick/
          source .venv/bin/activate
          ./run_tests.py

# TODO: ExampleWorkflow.py is not included here because it needs a built Trick
#  to function correctly and I don't want to duplicate the Trick build testing
#  here to provide testing of what is essentially an example provided for
#  documentation purposes.  If we could leverage artifacts from a previous
#  stage and/or stable containers where Trick is already pre-built, we should
#  consider adding ExampleWorfklow.py to testing in this file. -Jordan 4/2021
