name: Trick CI

on: [push]

jobs:
  ubuntu-1604:
    runs-on: ubuntu-18.04
    container: docker://ubuntu:16.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@master
    
    - name: update apt
      run: apt-get update
   
    - name: Install dependencies
      run: >
        apt-get install -y git bison curl flex g++ libx11-dev libxml2-dev libxt-dev
        libmotif-common libmotif-dev make openjdk-8-jdk python2.7-dev swig
        zlib1g-dev llvm llvm-dev clang libclang-dev libudunits2-dev
        libgtest-dev cmake maven
        
    - name: Build gtest
      run: cd /usr/src/gtest && cmake . && make && cp libgtest* /usr/lib/

    - name: Build Trick
      run: |
        export MAKEFLAGS=-j4
        ./configure
        make
    - name: Run tests
      run: make test  

  ubuntu-1804:
    runs-on: ubuntu-18.04
    container: docker://ubuntu:18.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@master
    
    - name: update apt
      run: apt-get update
   
    - name: Install dependencies
      run: >
        apt-get install -y git bison curl flex g++ libx11-dev libxml2-dev libxt-dev
        libmotif-common libmotif-dev make openjdk-8-jdk python2.7-dev swig
        zlib1g-dev llvm llvm-dev clang libclang-dev libudunits2-dev
        libgtest-dev cmake maven
        
    - name: Build gtest
      run: cd /usr/src/gtest && cmake . && make && cp libgtest* /usr/lib/

    - name: Build Trick
      run: |
        export MAKEFLAGS=-j4
        ./configure
        make
    - name: Run tests
      run: make test
      
  ubuntu-1904:
    runs-on: ubuntu-18.04
    container: docker://ubuntu:19.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@master
    
    - name: update apt
      run: apt-get update
   
    - name: Install dependencies
      run: >
        apt-get install -y git bison curl flex g++ libx11-dev libxml2-dev libxt-dev
        libmotif-common libmotif-dev make openjdk-8-jdk python2.7-dev swig
        zlib1g-dev llvm llvm-dev clang libclang-dev libudunits2-dev
        libgtest-dev cmake maven
        
    - name: Build gtest
      run: cd /usr/src/gtest && cmake . && make && cp libgtest* /usr/lib/

    - name: Build Trick
      run: |
        export MAKEFLAGS=-j4
        ./configure
        make
    - name: Run tests
      run: make test
  
  macOS:
    runs-on: macOS-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@master
   
    - name: Install gtest
      run: |
        wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz
        tar xzvf release-1.8.0.tar.gz
        cd googletest-release-1.8.0/googletest
        cmake .
        make
        make install
    
    - name: Install dependencies
      run: |
        # sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.15.pkg -target /
        brew cask install xquartz
        brew install llvm swig udunits openmotif maven
    - name: Build Trick
      run: |
        export MAKEFLAGS=-j4
        ./configure
        make
    
    - name: Run tests
      run: |
        export MAKEFLAGS=-j4
        make test
        
  centos-7:
    runs-on: ubuntu-18.04
    container: docker://centos:7
    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Install the epel repository and update yum
      run: yum -y install epel-release && yum -y update
    
    - name: Install dependencies 
      run: >
        yum install -y git bison flex gcc gcc-c++ make which clang clang-devel 
        llvm llvm-devel llvm-static libxml2-devel libX11-devel libXt-devel 
        ncurses-devel openmotif openmotif-devel perl perl-Digest-MD5 
        python-devel swig zlib-devel udunits2 udunits2-devel 
        java-1.8.0-openjdk-devel gtest-devel maven
    - name: Build Trick
      run: |
        export MAKEFLAGS=-j4
        ./configure
        make
    
    - name: Run tests
      run: make test
  
  fedora-30:
    runs-on: ubuntu-18.04
    container: docker://fedora:30
    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Install dependencies
      run: >
        dnf install -y git bison flex gcc gcc-c++ libxml2-devel make openmotif
        openmotif-devel python-devel perl swig zlib-devel llvm llvm-devel llvm-static
        clang clang-devel perl-Text-Balanced perl-Digest-MD5 udunits2 udunits2-devel
        java-1.8.0-openjdk-devel ncurses-devel maven which
    
    - name: Install gtest
      run:  dnf install -y gtest-devel

    - name: Build Trick
      run: |
        export MAKEFLAGS=-j4
        ./configure
        make
    
    - name: Run tests
      run: make test
  trick_32bit:
    runs-on: ubuntu-18.04
    container: docker://centos:7
    steps:
    - name: Checkout repository
      uses: actions/checkout@master
    - name: Add yum repo
      run: yum -y install epel-release.noarch 
    - name: Install dependency group
      run: yum -y groupinstall "Development tools"       
    - name: Install other dependencies
      run: >
        yum install -y llvm llvm-devel llvm-static clang clang-devel 
        install bison flex gcc gcc-c++ libxml2-devel make cmake wget
        ncurses-devel openmotif openmotif-devel python-devel perl 
        perl-Digest-MD5 swig zlib-devel glibc.x86_64 libxml2-devel.i686 
        ncurses-devel.i686 zlib-devel.i686 python-libs.i686 
        expat-2.1.0-10.el7_3.i686 glibc-devel-2.17-196.el7.i686 
        glibc.i686 glibc-devel.i686 udunits2 udunits2-devel gtest-devel.i686
        java-1.8.0-openjdk java-1.8.0-openjdk-devel expat-devel.i686
        which gcc-gfortran git wget cppcheck hdf5-devel gsl-devel  
        gtest-devel gsl-devel.i686 maven udunits2 udunits2-devel
    - name: Symlink python
      run: |
        cd /usr/lib
        ln -s ./libpython2.7.so.1.0 libpython2.7.so 
    - name: Install Udunits (32 bit)
      run: |
        curl --retry 4 -O https://www.unidata.ucar.edu/downloads/udunits/udunits-2.2.26.tar.gz
        tar xfvz udunits-2.2.26.tar.gz
        rm udunits-2.2.26.tar.gz
        cd udunits-2.2.26
        export CFLAGS="-m32"
        ./configure --prefix=/usr
        make
        make install
    - name: Install GTest (32 bit)
      run: |
        wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz
        tar xfvz release-1.8.0.tar.gz
        cd googletest-release-1.8.0/googletest
        export CFLAGS="-m32"
        export CXXFLAGS="-m32"
        cmake .
        make
        make install
    - name: Build Trick
      run: |
        yum -y update && yum clean all
        export MAKEFLAGS=-j4
        ./configure --without-hdf5 --enable-32bit
        make
    
    - name: Run tests
      run: make test