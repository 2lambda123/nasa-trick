# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_me18dda184e7a3a5300b5efa2b558f756')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_me18dda184e7a3a5300b5efa2b558f756')
    _me18dda184e7a3a5300b5efa2b558f756 = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_me18dda184e7a3a5300b5efa2b558f756', [dirname(__file__)])
        except ImportError:
            import _me18dda184e7a3a5300b5efa2b558f756
            return _me18dda184e7a3a5300b5efa2b558f756
        try:
            _mod = imp.load_module('_me18dda184e7a3a5300b5efa2b558f756', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _me18dda184e7a3a5300b5efa2b558f756 = swig_import_helper()
    del swig_import_helper
else:
    import _me18dda184e7a3a5300b5efa2b558f756
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _me18dda184e7a3a5300b5efa2b558f756.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_equal(self, x)

    def copy(self):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_copy(self)

    def next(self):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_next(self)

    def __next__(self):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator___next__(self)

    def previous(self):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_previous(self)

    def advance(self, n):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _me18dda184e7a3a5300b5efa2b558f756.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)


def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    all_keys = [attr for attr in dir(class_type) if not attr.startswith('__')and attr != '_s' ]
    data_keys = sorted(class_type.__swig_setmethods__.keys())
    method_keys = [ x for x in all_keys if x not in data_keys ]
    raise AttributeError("Type %s does not contain member %s.\n%s data = %s\n%s methods = %s" %
     (self.__class__.__name__,name,self.__class__.__name__,data_keys,self.__class__.__name__,method_keys))

def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
# this line is changed to handle older swigs that used PySwigObject instead of the current SwigPyObject
        if type(value).__name__ == 'SwigPyObject' or type(value).__name__ == 'PySwigObject' :
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        all_keys = [attr for attr in dir(class_type) if not attr.startswith('__') and attr != '_s' ]
        data_keys = sorted(class_type.__swig_setmethods__.keys())
        method_keys = [ x for x in all_keys if x not in data_keys ]
        raise AttributeError("Type %s does not contain member %s.\n%s data = %s\n%s methods = %s" %
         (self.__class__.__name__,name,self.__class__.__name__,data_keys,self.__class__.__name__,method_keys))

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,1)

class BODY(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BODY, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BODY, name)
    __repr__ = _swig_repr

    def __init__(self, **kwargs):
        import _sim_services
        this = _me18dda184e7a3a5300b5efa2b558f756.new_BODY()
        try: self.this.append(this)
        except: self.this = this
        if 'TMMName' in kwargs:
            self.this.own(0)
            isThisInMM = _sim_services.get_alloc_info_at(this)
            if isThisInMM:
                _sim_services.set_alloc_name_at(this, kwargs['TMMName'])
            else:
                _sim_services.TMM_declare_ext_var(this, _sim_services.TRICK_STRUCTURED, "BODY", 0, kwargs['TMMName'], 0, None)
            alloc_info = _sim_services.get_alloc_info_at(this)
            alloc_info.stcl = _sim_services.TRICK_LOCAL
            alloc_info.alloc_type = _sim_services.TRICK_ALLOC_NEW


    __swig_destroy__ = _me18dda184e7a3a5300b5efa2b558f756.delete_BODY
    __del__ = lambda self: None
    __swig_setmethods__["POS_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_POS_INIT_set
    __swig_getmethods__["POS_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_POS_INIT_get
    if _newclass:
        POS_INIT = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_POS_INIT_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_POS_INIT_set)
    __swig_setmethods__["VEL_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_VEL_INIT_set
    __swig_getmethods__["VEL_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_VEL_INIT_get
    if _newclass:
        VEL_INIT = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_VEL_INIT_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_VEL_INIT_set)
    __swig_setmethods__["ANGLE_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_ANGLE_INIT_set
    __swig_getmethods__["ANGLE_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_ANGLE_INIT_get
    if _newclass:
        ANGLE_INIT = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_ANGLE_INIT_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_ANGLE_INIT_set)
    __swig_setmethods__["OMEGA_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_OMEGA_INIT_set
    __swig_getmethods__["OMEGA_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_OMEGA_INIT_get
    if _newclass:
        OMEGA_INIT = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_OMEGA_INIT_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_OMEGA_INIT_set)
    __swig_setmethods__["pos"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_pos_set
    __swig_getmethods__["pos"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_pos_get
    if _newclass:
        pos = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_pos_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_pos_set)
    __swig_setmethods__["vel"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_vel_set
    __swig_getmethods__["vel"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_vel_get
    if _newclass:
        vel = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_vel_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_vel_set)
    __swig_setmethods__["angle"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_angle_set
    __swig_getmethods__["angle"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_angle_get
    if _newclass:
        angle = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_angle_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_angle_set)
    __swig_setmethods__["omega"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_omega_set
    __swig_getmethods__["omega"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_omega_get
    if _newclass:
        omega = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_omega_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_omega_set)
    __swig_setmethods__["acc"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_acc_set
    __swig_getmethods__["acc"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_acc_get
    if _newclass:
        acc = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_acc_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_acc_set)
    __swig_setmethods__["omegaDot"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_omegaDot_set
    __swig_getmethods__["omegaDot"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_omegaDot_get
    if _newclass:
        omegaDot = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_omegaDot_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_omegaDot_set)
    __swig_setmethods__["force"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_force_set
    __swig_getmethods__["force"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_force_get
    if _newclass:
        force = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_force_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_force_set)
    __swig_setmethods__["FORCE_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_FORCE_INIT_set
    __swig_getmethods__["FORCE_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_FORCE_INIT_get
    if _newclass:
        FORCE_INIT = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_FORCE_INIT_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_FORCE_INIT_set)
    __swig_setmethods__["force_remain"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_force_remain_set
    __swig_getmethods__["force_remain"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_force_remain_get
    if _newclass:
        force_remain = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_force_remain_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_force_remain_set)
    __swig_setmethods__["POS_FORCE"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_POS_FORCE_set
    __swig_getmethods__["POS_FORCE"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_POS_FORCE_get
    if _newclass:
        POS_FORCE = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_POS_FORCE_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_POS_FORCE_set)
    __swig_setmethods__["torque"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_torque_set
    __swig_getmethods__["torque"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_torque_get
    if _newclass:
        torque = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_torque_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_torque_set)
    __swig_setmethods__["TORQUE_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_TORQUE_INIT_set
    __swig_getmethods__["TORQUE_INIT"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_TORQUE_INIT_get
    if _newclass:
        TORQUE_INIT = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_TORQUE_INIT_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_TORQUE_INIT_set)
    __swig_setmethods__["torque_remain"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_torque_remain_set
    __swig_getmethods__["torque_remain"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_torque_remain_get
    if _newclass:
        torque_remain = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_torque_remain_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_torque_remain_set)
    __swig_setmethods__["inertia"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_inertia_set
    __swig_getmethods__["inertia"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_inertia_get
    if _newclass:
        inertia = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_inertia_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_inertia_set)
    __swig_setmethods__["inertia_matrix"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_inertia_matrix_set
    __swig_getmethods__["inertia_matrix"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_inertia_matrix_get
    if _newclass:
        inertia_matrix = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_inertia_matrix_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_inertia_matrix_set)
    __swig_setmethods__["radius"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_radius_set
    __swig_getmethods__["radius"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_radius_get
    if _newclass:
        radius = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_radius_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_radius_set)
    __swig_setmethods__["mass"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_mass_set
    __swig_getmethods__["mass"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_mass_get
    if _newclass:
        mass = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_mass_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_mass_set)
    __swig_setmethods__["mat_mass"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_mat_mass_set
    __swig_getmethods__["mat_mass"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_mat_mass_get
    if _newclass:
        mat_mass = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_mat_mass_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_mat_mass_set)
    __swig_setmethods__["massmatrix"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_massmatrix_set
    __swig_getmethods__["massmatrix"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_massmatrix_get
    if _newclass:
        massmatrix = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_massmatrix_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_massmatrix_set)
    __swig_setmethods__["CM"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_CM_set
    __swig_getmethods__["CM"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_CM_get
    if _newclass:
        CM = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_CM_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_CM_set)
    __swig_setmethods__["CM_skew"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_CM_skew_set
    __swig_getmethods__["CM_skew"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_CM_skew_get
    if _newclass:
        CM_skew = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_CM_skew_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_CM_skew_set)
    __swig_setmethods__["m_CM_skew"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_m_CM_skew_set
    __swig_getmethods__["m_CM_skew"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_m_CM_skew_get
    if _newclass:
        m_CM_skew = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_m_CM_skew_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_m_CM_skew_set)
    __swig_setmethods__["neg_m_CM_skew"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_neg_m_CM_skew_set
    __swig_getmethods__["neg_m_CM_skew"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_neg_m_CM_skew_get
    if _newclass:
        neg_m_CM_skew = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_neg_m_CM_skew_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_neg_m_CM_skew_set)
    __swig_setmethods__["vec_a"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_vec_a_set
    __swig_getmethods__["vec_a"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_vec_a_get
    if _newclass:
        vec_a = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_vec_a_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_vec_a_set)
    __swig_setmethods__["vec_b"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_vec_b_set
    __swig_getmethods__["vec_b"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_vec_b_get
    if _newclass:
        vec_b = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_vec_b_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_vec_b_set)
    __swig_setmethods__["rotate"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_rotate_set
    __swig_getmethods__["rotate"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_rotate_get
    if _newclass:
        rotate = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_rotate_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_rotate_set)
    __swig_setmethods__["angle_force"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_angle_force_set
    __swig_getmethods__["angle_force"] = _me18dda184e7a3a5300b5efa2b558f756.BODY_angle_force_get
    if _newclass:
        angle_force = _swig_property(_me18dda184e7a3a5300b5efa2b558f756.BODY_angle_force_get, _me18dda184e7a3a5300b5efa2b558f756.BODY_angle_force_set)

    def default_data(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_default_data(self, *args)

    def init(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_init(self, *args)

    def derivative(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_derivative(self, *args)

    def integ(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_integ(self, *args)

    def mass_matrix(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_mass_matrix(self, *args)

    def rotation_matrix(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_rotation_matrix(self, *args)

    def calcforce(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_calcforce(self, *args)

    def calctorque(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_calctorque(self, *args)

    def calcforce_remain(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_calcforce_remain(self, *args)

    def calctorque_remain(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_calctorque_remain(self, *args)

    def eq_setup(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_eq_setup(self, *args)

    def eq_solver(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY_eq_solver(self, *args)

    def __getitem__(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY___getitem__(self, *args)

    def __len__(self, *args):
        return _me18dda184e7a3a5300b5efa2b558f756.BODY___len__(self, *args)
BODY_swigregister = _me18dda184e7a3a5300b5efa2b558f756.BODY_swigregister
BODY_swigregister(BODY)


def castAsBODY(*args):
    return _me18dda184e7a3a5300b5efa2b558f756.castAsBODY(*args)
castAsBODY = _me18dda184e7a3a5300b5efa2b558f756.castAsBODY
# This file is compatible with both classic and new-style classes.


